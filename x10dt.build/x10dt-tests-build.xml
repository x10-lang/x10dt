<project name="X10DT Build" basedir="." default="main">

  <import file="utilities.xml" />
  <property file="common.properties" />
  <property file="tests-build.properties" />

  <target name="x10dt-checkouts-existence">
    <condition property="are-plugins-present">
      <and>
        <available file="${build.folder}/x10.tests" type="dir" />
        <available file="${build.folder}/x10dt.tests.feature" type="dir" />
        <available file="${build.folder}/x10dt.core.tests" type="dir" />
        <available file="${build.folder}/x10dt.ui.tests" type="dir" />
        <available file="${build.folder}/x10dt.tests.services" type="dir" />
        <available file="${build.folder}/x10dt.ui.launch.cpp.tests" type="dir" />
        <available file="${build.folder}/x10.effects.tests" type="dir" />
      </and>
    </condition>
  </target>

  <target name="x10dt-checkouts" depends="x10dt-checkouts-existence" unless="are-plugins-present">
    <svn username="anonymous">
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/${x10.tag}/x10.tests" revision="${x10.revision}" 
                destPath="${build.folder}/x10.tests" />

      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/x10dt.tests.feature" 
                revision="${x10dt.revision}" destPath="${build.folder}/x10dt.tests.feature" />
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/x10dt.core.tests" 
                revision="${x10dt.revision}" destPath="${build.folder}/x10dt.core.tests" />
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/x10dt.ui.tests" 
                revision="${x10dt.revision}" destPath="${build.folder}/x10dt.ui.tests" />
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/x10dt.tests.services" 
                revision="${x10dt.revision}" destPath="${build.folder}/x10dt.tests.services" />
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/x10dt.ui.launch.cpp.tests" 
                revision="${x10dt.revision}" destPath="${build.folder}/x10dt.ui.launch.cpp.tests" />
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/x10.effects.tests" 
                revision="${x10dt.revision}" destPath="${build.folder}/x10.effects.tests" />
      <checkout url="https://x10.svn.sourceforge.net/svnroot/x10/x10dt/${x10dt.tag}/org.junit.addons" 
                revision="${x10dt.revision}" destPath="${build.folder}/org.junit.addons" />
    </svn>
  </target>

  <target name="swtbot-check">
    <available file="${repositories}/swtbot" type="dir" property="swtbot.repo.exists"/>
  </target>

  <target name="swtbot-repo-setup" depends="swtbot-check" unless="swtbot.repo.exists">
    <p2.mirror destination="file:${repositories}/swtbot">
      <source>
        <repository location="http://download.eclipse.org/technology/swtbot/helios/dev-build/update-site" />
      </source>
      <iu id="org.eclipse.swtbot.feature.group" />
      <iu id="org.eclipse.swtbot.eclipse.feature.group" />
      <iu id="org.eclipse.swtbot.eclipse.test.junit4.feature.group" />
      <iu id="org.eclipse.swtbot.eclipse.junit4.headless" />
    </p2.mirror>
  </target>

  <target name="test-framework-check">
    <available file="${repositories}/test-framework" type="dir" property="test-framework.repo.exists" />
  </target>

  <target name="test-framework-repo-setup" depends="test-framework-check" unless="test-framework.repo.exists">
    <eclipse.publish.featuresAndBundles repository="file:${repositories}/test-framework">
      <features dir="${build.folder}/../test-framework/eclipse/features" includes="*" />
      <bundles dir="${build.folder}/../test-framework/eclipse/plugins" includes="*" />
    </eclipse.publish.featuresAndBundles>
  </target>

  <target name="main" depends="x10dt-checkouts,swtbot-repo-setup,test-framework-repo-setup">
    <ant antfile="${eclipse.pdebuild.scripts}/productBuild/productBuild.xml">
      <property name="buildProperties" value="tests-build.properties" />
      <property name="customTargets" location="testCustomTargets.xml" />
    </ant>
    <unzip dest="${buildDirectory}">
      <fileset dir="${buildDirectory}/${buildLabel}">
        <include name="*.zip" />
      </fileset>
    </unzip>
  </target>

</project>