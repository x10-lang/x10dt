<project name="X10 Dist and Fragments Build" basedir="." default="main">

  <property file="common.properties" />
  <property file="build.properties" />

  <tstamp>
    <format property="build.time" pattern="yyyyMMddHHmm" />
  </tstamp>
  <condition property="build.qualifier" value="${build.time}">
    <not>
      <isset property="build.qualifier" />
    </not>
  </condition>
  <path id="lpg.path.ref">
    <fileset dir="${build.folder}/dependencies/repos/mirror/plugins" includes="lpg.runtime_*.jar" />
    <fileset dir="${build.folder}/dependencies/repos/mirror/plugins" includes="lpg.runtime.java_*.jar" />
  </path>
  <path id="wala.path.ref">
    <fileset dir="${wala.update.loc}/plugins" includes="com.ibm.wala*.jar"/>
  </path>
  <property name="x10.compiler.dist" value="${repoBaseLocation}/compiler/plugins"/>
  <!-- For building with build files in X10 plugins -->
  <property name="eclipse.target.platform" value="../../eclipse" />
  <property name="x10.compiler.extra.build.path" value="${toString:lpg.path.ref}:${toString:wala.path.ref}" />
  <property name="x10.wala.extra.build.path" value="${toString:wala.path.ref}" />

  <target name="x10-checkouts-existence">
    <condition property="are-plugins-present">
      <and>
        <available file="${x10.build.loc}/x10.common"      type="dir" />
        <available file="${x10.build.loc}/x10.constraints" type="dir" />
        <available file="${x10.build.loc}/x10.compiler"    type="dir" />
        <available file="${x10.build.loc}/x10.doc"         type="dir" />
        <available file="${x10.build.loc}/x10.runtime"     type="dir" />
        <available file="${x10.build.loc}/x10.wala"        type="dir" />
        <available file="${x10.build.loc}/x10dt.update"    type="dir" />
        <available file="${x10.build.loc}/x10dt.feature"   type="dir" />
        <available file="${x10.build.loc}/x10.dist.host"   type="dir" />
      </and>
    </condition>
  </target>

  <target name="x10-checkouts" depends="x10-checkouts-existence" unless="are-plugins-present">
    <echo message="Using SVN revision ${x10.revision} and tag ${x10.tag} for X10 core checkouts"/>
    <svn username="anonymous">
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.compiler" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.compiler" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.common" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.common" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.constraints" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.constraints" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.doc" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.doc" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.runtime" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.runtime" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.wala" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.wala" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}/x10.dist" revision="${x10.revision}" 
                destPath="${x10.build.loc}/x10.dist" />

      <!-- We get the following X10DT plugin projects here b/c the exportPlugin.xml scripts in
           the X10 core plugins above depend on buildCommon.xml and buildPluginCommon.xml. -->
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/x10dt/${x10dt.tag}/x10dt.update" 
                revision="${x10dt.revision}" destPath="${x10.build.loc}/x10dt.update" />
      <checkout url="https://svn.code.sourceforge.net/p/x10/code/x10dt/${x10dt.tag}/x10dt.feature" 
                revision="${x10dt.revision}" destPath="${x10.build.loc}/x10dt.feature" />

      <checkout url="https://svn.code.sourceforge.net/p/x10/code/x10dt/${x10dt.tag}/x10.dist.host" 
                revision="${x10dt.revision}" destPath="${x10.build.loc}/x10.dist.host" />
    </svn>
  </target>

  <target name="check-build-required">
    <condition property="x10.dist.available">
      <and>
        <available file="${x10.build.loc}" type="dir" />
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.loc}/x10.constraints">
              <include name="x10.constraints_*.jar" />
            </fileset>
          </restrict>
        </resourcecount>
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.loc}/x10.common">
              <include name="x10.common_*.jar" />
            </fileset>
          </restrict>
        </resourcecount>
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.loc}/x10.compiler">
              <include name="x10.compiler_*.jar" />
            </fileset>
          </restrict>
        </resourcecount>
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.loc}/x10.runtime">
              <include name="x10.runtime_*.jar" />
            </fileset>
          </restrict>
        </resourcecount>
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.loc}/x10.wala">
              <include name="x10.wala_*.jar" />
            </fileset>
          </restrict>
        </resourcecount>
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.loc}/x10.dist.host">
              <include name="x10.dist.host_*.jar" />
            </fileset>
          </restrict>
        </resourcecount>
      </and>
    </condition>
  </target>

  <target name="build" depends="check-build-required" unless="x10.dist.available">
    <echo message="Build with tag ${x10.tag}"/>

    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="math-jar" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="shrike-jar" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="antlr-jar" />

    <ant antfile="${x10.build.loc}/x10.common/exportPlugin.xml" dir="${x10.build.loc}/x10.common" target="build.jars" />
    <ant antfile="${x10.build.loc}/x10.constraints/exportPlugin.xml" dir="${x10.build.loc}/x10.constraints" target="build.jars"/>
    <ant antfile="${x10.build.loc}/x10.compiler/exportPlugin.xml" dir="${x10.build.loc}/x10.compiler" target="build.jars">
      <property name="extra.build.path" value="${x10.compiler.extra.build.path}" />
    </ant>
    <antcall target="prepare.x10.dist" />
    <ant antfile="${x10.build.loc}/x10.runtime/exportPlugin.xml" dir="${x10.build.loc}/x10.runtime" target="build.jars" />
    <ant antfile="${x10.build.loc}/x10.wala/exportPlugin.xml" dir="${x10.build.loc}/x10.wala" target="build.jars">
      <property name="extra.build.path" value="${x10.wala.extra.build.path}" />
      <property name="plugin.src.path" value="src"/>
    </ant>

    <ant antfile="${x10.build.loc}/x10.dist.host/exportPlugin.xml" dir="${x10.build.loc}/x10.dist.host" target="build.jars" />
  </target>

  <target name="transfer-x10-release" if="x10.release.based"
          description="Copies the contents of a given platform fragment from the tarball into the right spot in the transformedRepos">
    <property name="dist.dir" value="${x10.release.build.base}/${x10.tarballs.release.tag}"/>
    <property name="file.name" value="x10-${x10.tarballs.release.tag}_${os}.tgz"/>
    <property name="dist.file" value="${dist.dir}/${file.name}" />
    <fail message="Could not find ${dist.file}">
      <condition>
        <resourcecount when="equal" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${dist.dir}">
              <include name="${file.name}" />
            </fileset>
          </restrict>
        </resourcecount>
      </condition>
    </fail>
    <!-- Get the platform tarball's contents into a temp directory -->
    <untar src="${dist.file}" dest="/tmp/x10-${zip.release.tag}_${os}" compression="gzip" />
    <echo message="Extracting X10 sources from x10.jar to /tmp/x10-${zip.release.tag}_${os}/src-x10"/>
    <mkdir dir="/tmp/x10-${zip.release.tag}_${os}/src-x10" />
    <unzip src="/tmp/x10-${zip.release.tag}_${os}/stdlib/x10.jar" dest="/tmp/x10-${zip.release.tag}_${os}/src-x10">
      <patternset>
        <include name="**/*.x10" />
      </patternset>
    </unzip>

    <property name="fragment-dir-name" value="${fragment-name}_${zip.release.tag}.${build.qualifier}" />
    <!-- Add to the fragment directory the necessary bits from the source project.
         This is really just for the bundle fragment's MANIFEST.MF. -->
    <svn username="anonymous">
      <export srcUrl="https://svn.code.sourceforge.net/p/x10/code/x10dt/${x10dt.tag}/${fragment-name}" 
                revision="${x10dt.revision}" destPath="${transformedRepoLocation}/plugins/${fragment-dir-name}" />
    </svn>

    <copy todir="${transformedRepoLocation}/plugins/${fragment-dir-name}">
      <fileset dir="/tmp/x10-${zip.release.tag}_${os}"/>
    </copy>
    <delete dir="/tmp/x10-${zip.release.tag}_${os}" />
    <!-- Remove anything that shouldn't be in the deployed fragment. Mostly this consists
         of source entities like the .project, .classpath, etc. files that got pulled in
         by the SVN checkout above. -->
    <delete includeemptydirs="true">
      <fileset dir="${transformedRepoLocation}/plugins/${fragment-dir-name}" >
        <include name=".project" />
        <include name=".classpath" />
        <include name=".settings/**" />
      </fileset>
    </delete>
    <loadfile srcfile="${transformedRepoLocation}/plugins/${fragment-dir-name}/META-INF/MANIFEST.MF" 
              property="file.replaced">
      <filterchain>
        <replaceregex pattern="Bundle-Version: (.*)\.qualifier" replace="Bundle-Version: \1.${build.qualifier}"/>
      </filterchain>
    </loadfile>
    <echo message="${file.replaced}" file="${transformedRepoLocation}/plugins/${fragment-dir-name}/META-INF/MANIFEST.MF"/>
  </target>

  <target name="set-dist-file-loc">
    <property name="dist.file" value="${x10.build.base}/${svn.info.lastRev}/x10-tib_${svn.info.lastRev}_${os}.tgz" />
  </target>

  <target name="transfer-all">
    <antcall target="transfer-x10-release">
      <param name="os" value="linux_x86" />
      <param name="fragment-name" value="x10.dist.linux.x86.fragment" />
    </antcall>
    <antcall target="transfer-x10-release">
      <param name="os" value="linux_x86_64" />
      <param name="fragment-name" value="x10.dist.linux.x86_64.fragment" />
    </antcall>
    <antcall target="transfer-x10-release">
      <param name="os" value="cygwin_x86" />
      <param name="fragment-name" value="x10.dist.win32.x86.fragment" />
    </antcall>
    <antcall target="transfer-x10-release">
      <param name="os" value="macosx_x86" />
      <param name="fragment-name" value="x10.dist.macosx.x86.fragment" />
    </antcall>
  </target>

  <target name="prepare.x10.dist">
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="squeakyclean" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="bin" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="ecj-jar" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="lpg-jar" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="hazelcast-jar" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="antlr-jar" />
    <ant antfile="${x10.build.loc}/x10.dist/build.xml" dir="${x10.build.loc}/x10.dist" target="compiler-jar" />
  </target>

  <target name="transfer-x10-core">
    <mkdir dir="${x10.compiler.dist}" />
    <copy todir="${x10.compiler.dist}">
      <fileset dir="${x10.build.loc}/x10.constraints" includes="x10.constraints_*.jar" />
      <fileset dir="${x10.build.loc}/x10.common" includes="x10.common_*.jar" />
      <fileset dir="${x10.build.loc}/x10.compiler" includes="x10.compiler_*.jar" />
      <fileset dir="${x10.build.loc}/x10.runtime" includes="x10.runtime_*.jar" />
      <fileset dir="${x10.build.loc}/x10.wala" includes="x10.wala_*.jar" />
      <fileset dir="${x10.build.loc}/x10.dist.host" includes="x10.dist.host_*.jar" />
    </copy>
  </target>

  <target name="main">
    <antcall target="x10-checkouts" />
    <antcall target="build" />
    <svn>
      <info target="https://svn.code.sourceforge.net/p/x10/code/${x10.tag}"/>
    </svn>
    <fail message="Could not find directory ${x10.build.base}/${svn.info.lastRev}">
      <condition>
        <resourcecount when="greater" count="0">
          <restrict>
            <exists xmlns="antlib:org.apache.tools.ant.types.resources.selectors" />
            <fileset dir="${x10.build.base}" includes="${svn.info.lastRev}" />
          </restrict>
        </resourcecount>
      </condition>
    </fail>
    <antcall target="transfer-x10-core"/>
    <antcall target="transfer-all" />
  </target>

</project>
