#ifndef __X10_LANG_RUNTIME__REMOTE_H
#define __X10_LANG_RUNTIME__REMOTE_H

#include <x10rt.h>


#define X10_LANG_RUNTIME__REMOTECONTROL_H_NODEPS
#include <x10/lang/Runtime__RemoteControl.h>
#undef X10_LANG_RUNTIME__REMOTECONTROL_H_NODEPS
namespace x10 { namespace lang { 
class Any;
} } 
namespace x10 { namespace lang { 
class UnsupportedOperationException;
} } 
namespace x10 { namespace lang { 
class String;
} } 
namespace x10 { namespace util { 
template<class FMGL(T)> class Box;
} } 
namespace x10 { namespace lang { 

template<class FMGL(T)> class Runtime__Remote;
template <> class Runtime__Remote<void>;
template<class FMGL(T)> class Runtime__Remote : public x10::lang::Runtime__RemoteControl
  {
    public:
    RTT_H_DECLS_CLASS
    
    static x10aux::itable_entry _itables[4];
    
    virtual x10aux::itable_entry* _getITables() { return _itables; }
    
    static x10::io::CustomSerialization::itable<x10::lang::Runtime__Remote<FMGL(T)> > _itable_0;
    
    static x10::lang::Any::itable<x10::lang::Runtime__Remote<FMGL(T)> > _itable_1;
    
    static x10::lang::Runtime__Mortal::itable<x10::lang::Runtime__Remote<FMGL(T)> > _itable_2;
    
    virtual x10_boolean _isMortal() { return true; }
    
    void _instance_init();
    
    void _constructor();
    
    static x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > _make(
             );
    
    void _constructor(x10aux::ref<x10::lang::Any> id__41);
    
    static x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > _make(
             x10aux::ref<x10::lang::Any> id__41);
    
    x10aux::ref<x10::util::Box<FMGL(T)> > FMGL(t);
    
    virtual x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > x10__lang__Runtime__Remote____x10__lang__Runtime__Remote__this(
      );
    void __fieldInitializers2006();
    
    // Serialization
    public: static const x10aux::serialization_id_t _serialization_id;
    
    public: virtual x10aux::serialization_id_t _get_serialization_id() {
         return _serialization_id;
    }
    
    // autogenerated custom deserialization
    void _constructor(x10aux::ref<x10::io::SerialData> sd) {
        x10::lang::Runtime__RemoteControl::_constructor(sd);
    }
    
    public: virtual void _serialize_body(x10aux::serialization_buffer& buf);
    
    public: template<class __T> static x10aux::ref<__T> _deserializer(x10aux::deserialization_buffer& buf);
    
    public: void _deserialize_body(x10aux::deserialization_buffer& buf);
    
};
template <> class Runtime__Remote<void> : public x10::lang::Runtime__RemoteControl
{
    public:
    static x10aux::RuntimeType rtt;
    static const x10aux::RuntimeType* getRTT() { return & rtt; }
    
};

} } 
#endif // X10_LANG_RUNTIME__REMOTE_H

namespace x10 { namespace lang { 
template<class FMGL(T)>
class Runtime__Remote;
} } 

#ifndef X10_LANG_RUNTIME__REMOTE_H_NODEPS
#define X10_LANG_RUNTIME__REMOTE_H_NODEPS
#include <x10/lang/Runtime__RemoteControl.h>
#include <x10/lang/Any.h>
#include <x10/lang/UnsupportedOperationException.h>
#include <x10/lang/String.h>
#include <x10/util/Box.h>
#ifndef X10_LANG_RUNTIME__REMOTE_H_GENERICS
#define X10_LANG_RUNTIME__REMOTE_H_GENERICS
template<class FMGL(T)> template<class __T> x10aux::ref<__T> x10::lang::Runtime__Remote<FMGL(T)>::_deserializer(x10aux::deserialization_buffer& buf) {
    x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > this_ = new (memset(x10aux::alloc<x10::lang::Runtime__Remote<FMGL(T)> >(), 0, sizeof(x10::lang::Runtime__Remote<FMGL(T)>))) x10::lang::Runtime__Remote<FMGL(T)>();
    buf.record_reference(this_);
    this_->_deserialize_body(buf);
    return this_;
}

#endif // X10_LANG_RUNTIME__REMOTE_H_GENERICS
#ifndef X10_LANG_RUNTIME__REMOTE_H_IMPLEMENTATION
#define X10_LANG_RUNTIME__REMOTE_H_IMPLEMENTATION
#include <x10/lang/Runtime__Remote.h>


template<class FMGL(T)> x10::io::CustomSerialization::itable<x10::lang::Runtime__Remote<FMGL(T)> >  x10::lang::Runtime__Remote<FMGL(T)>::_itable_0(&x10::lang::Runtime__Remote<FMGL(T)>::equals, &x10::lang::Runtime__Remote<FMGL(T)>::hashCode, &x10::lang::Runtime__Remote<FMGL(T)>::serialize, &x10::lang::Runtime__Remote<FMGL(T)>::toString, &x10::lang::Runtime__Remote<FMGL(T)>::typeName);
template<class FMGL(T)> x10::lang::Any::itable<x10::lang::Runtime__Remote<FMGL(T)> >  x10::lang::Runtime__Remote<FMGL(T)>::_itable_1(&x10::lang::Runtime__Remote<FMGL(T)>::equals, &x10::lang::Runtime__Remote<FMGL(T)>::hashCode, &x10::lang::Runtime__Remote<FMGL(T)>::toString, &x10::lang::Runtime__Remote<FMGL(T)>::typeName);
template<class FMGL(T)> x10::lang::Runtime__Mortal::itable<x10::lang::Runtime__Remote<FMGL(T)> >  x10::lang::Runtime__Remote<FMGL(T)>::_itable_2(&x10::lang::Runtime__Remote<FMGL(T)>::equals, &x10::lang::Runtime__Remote<FMGL(T)>::hashCode, &x10::lang::Runtime__Remote<FMGL(T)>::toString, &x10::lang::Runtime__Remote<FMGL(T)>::typeName);
template<class FMGL(T)> x10aux::itable_entry x10::lang::Runtime__Remote<FMGL(T)>::_itables[4] = {x10aux::itable_entry(&x10aux::getRTT<x10::io::CustomSerialization>, &_itable_0), x10aux::itable_entry(&x10aux::getRTT<x10::lang::Any>, &_itable_1), x10aux::itable_entry(&x10aux::getRTT<x10::lang::Runtime__Mortal>, &_itable_2), x10aux::itable_entry(NULL, (void*)x10aux::getRTT<x10::lang::Runtime__Remote<FMGL(T)> >())};
template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::_instance_init() {
    _I_("Doing initialisation for class: x10::lang::Runtime__Remote<FMGL(T)>");
    
}


//#line 763 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": x10.ast.X10ConstructorDecl_c
template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::_constructor(
                          ) {
    this->::x10::lang::Runtime__RemoteControl::_constructor();
    
    //#line 762 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": polyglot.ast.Eval_c
    ((x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> >)this)->x10::lang::Runtime__Remote<FMGL(T)>::__fieldInitializers2006();
    
}
template<class FMGL(T)> x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > x10::lang::Runtime__Remote<FMGL(T)>::_make(
                          ) {
    x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > this_ = new (memset(x10aux::alloc<x10::lang::Runtime__Remote<FMGL(T)> >(), 0, sizeof(x10::lang::Runtime__Remote<FMGL(T)>))) x10::lang::Runtime__Remote<FMGL(T)>();
    this_->_constructor();
    return this_;
}



//#line 764 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": x10.ast.X10ConstructorDecl_c
template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::_constructor(
                          x10aux::ref<x10::lang::Any> id__41) {
    this->::x10::lang::Runtime__RemoteControl::_constructor();
    
    //#line 762 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": polyglot.ast.Eval_c
    ((x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> >)this)->x10::lang::Runtime__Remote<FMGL(T)>::__fieldInitializers2006();
    
    //#line 765 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": polyglot.ast.Throw_c
    x10aux::throwException(x10aux::nullCheck(x10::lang::UnsupportedOperationException::_make(((x10aux::string_utils::lit("Cannot deserialize ")) + (x10aux::type_name(((x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> >)this)))))));
    
}
template<class FMGL(T)> x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > x10::lang::Runtime__Remote<FMGL(T)>::_make(
                          x10aux::ref<x10::lang::Any> id__41)
{
    x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> > this_ = new (memset(x10aux::alloc<x10::lang::Runtime__Remote<FMGL(T)> >(), 0, sizeof(x10::lang::Runtime__Remote<FMGL(T)>))) x10::lang::Runtime__Remote<FMGL(T)>();
    this_->_constructor(id__41);
    return this_;
}



//#line 767 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": x10.ast.X10FieldDecl_c

//#line 762 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": x10.ast.X10MethodDecl_c
template<class FMGL(T)> x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> >
  x10::lang::Runtime__Remote<FMGL(T)>::x10__lang__Runtime__Remote____x10__lang__Runtime__Remote__this(
  ) {
    
    //#line 762 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": x10.ast.X10Return_c
    return ((x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> >)this);
    
}

//#line 762 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": x10.ast.X10MethodDecl_c
template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::__fieldInitializers2006(
  ) {
    
    //#line 762 "/Users/rfuhrer/eclipse/workspaces/x10dt-trunk/x10.runtime/src-x10/x10/lang/Runtime.x10": polyglot.ast.Eval_c
    ((x10aux::ref<x10::lang::Runtime__Remote<FMGL(T)> >)this)->
      FMGL(t) = x10aux::class_cast_unchecked<x10aux::ref<x10::util::Box<FMGL(T)> > >(X10_NULL);
}
template<class FMGL(T)> const x10aux::serialization_id_t x10::lang::Runtime__Remote<FMGL(T)>::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(x10::lang::Runtime__Remote<FMGL(T)>::template _deserializer<x10::lang::Reference>, x10aux::CLOSURE_KIND_NOT_ASYNC);

template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::_serialize_body(x10aux::serialization_buffer& buf) {
    /* NOTE: Implements x10.io.CustomSerialization */
    buf.write(this->serialize());
    
}

template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::_deserialize_body(x10aux::deserialization_buffer& buf) {
    /* NOTE: Implements x10.io.CustomSerialization */
    x10aux::ref<x10::io::SerialData>val_ = buf.read<x10aux::ref<x10::io::SerialData> >();
    _constructor(val_);
    
}

template<class FMGL(T)> x10aux::RuntimeType x10::lang::Runtime__Remote<FMGL(T)>::rtt;
template<class FMGL(T)> void x10::lang::Runtime__Remote<FMGL(T)>::_initRTT() {
    const x10aux::RuntimeType *canonical = x10aux::getRTT<x10::lang::Runtime__Remote<void> >();
    if (rtt.initStageOne(canonical)) return;
    const x10aux::RuntimeType* parents[1] = { x10aux::getRTT<x10::lang::Runtime__RemoteControl>()};
    const x10aux::RuntimeType* params[1] = { x10aux::getRTT<FMGL(T)>()};
    x10aux::RuntimeType::Variance variances[1] = { x10aux::RuntimeType::invariant};
    const char *baseName = "x10.lang.Runtime.Remote";
    rtt.initStageTwo(baseName, x10aux::RuntimeType::class_kind, 1, parents, 1, params, variances);
}
#endif // X10_LANG_RUNTIME__REMOTE_H_IMPLEMENTATION
#endif // __X10_LANG_RUNTIME__REMOTE_H_NODEPS
