#ifndef __X10_LANG_RUNTIME__REMOTECONTROL_H
#define __X10_LANG_RUNTIME__REMOTECONTROL_H

#include <x10rt.h>


#define X10_LANG_SIMPLELATCH_H_NODEPS
#include <x10/lang/SimpleLatch.h>
#undef X10_LANG_SIMPLELATCH_H_NODEPS
#define X10_LANG_RUNTIME__MORTAL_H_NODEPS
#include <x10/lang/Runtime__Mortal.h>
#undef X10_LANG_RUNTIME__MORTAL_H_NODEPS
namespace x10 { namespace lang { 
class Any;
} } 
namespace x10 { namespace lang { 
class UnsupportedOperationException;
} } 
namespace x10 { namespace lang { 
class String;
} } 
namespace x10 { namespace lang { 
class Throwable;
} } 
namespace x10 { namespace lang { 
class Activity__ClockPhases;
} } 
namespace x10 { namespace lang { 

class Runtime__RemoteControl : public x10::lang::SimpleLatch   {
    public:
    RTT_H_DECLS_CLASS
    
    static x10aux::itable_entry _itables[4];
    
    virtual x10aux::itable_entry* _getITables() { return _itables; }
    
    static x10::io::CustomSerialization::itable<x10::lang::Runtime__RemoteControl > _itable_0;
    
    static x10::lang::Any::itable<x10::lang::Runtime__RemoteControl > _itable_1;
    
    static x10::lang::Runtime__Mortal::itable<x10::lang::Runtime__RemoteControl > _itable_2;
    
    virtual x10_boolean _isMortal() { return true; }
    
    void _instance_init();
    
    void _constructor();
    
    static x10aux::ref<x10::lang::Runtime__RemoteControl> _make();
    
    void _constructor(x10aux::ref<x10::lang::Any> id__40);
    
    static x10aux::ref<x10::lang::Runtime__RemoteControl> _make(x10aux::ref<x10::lang::Any> id__40);
    
    x10aux::ref<x10::lang::Throwable> FMGL(e);
    
    x10aux::ref<x10::lang::Activity__ClockPhases> FMGL(clockPhases);
    
    virtual x10aux::ref<x10::lang::Runtime__RemoteControl> x10__lang__Runtime__RemoteControl____x10__lang__Runtime__RemoteControl__this(
      );
    void __fieldInitializers2005();
    
    // Serialization
    public: static const x10aux::serialization_id_t _serialization_id;
    
    public: virtual x10aux::serialization_id_t _get_serialization_id() {
         return _serialization_id;
    }
    
    // autogenerated custom deserialization
    void _constructor(x10aux::ref<x10::io::SerialData> sd) {
        x10::lang::SimpleLatch::_constructor(sd);
    }
    
    public: virtual void _serialize_body(x10aux::serialization_buffer& buf);
    
    public: template<class __T> static x10aux::ref<__T> _deserializer(x10aux::deserialization_buffer& buf);
    
    public: void _deserialize_body(x10aux::deserialization_buffer& buf);
    
};

} } 
#endif // X10_LANG_RUNTIME__REMOTECONTROL_H

namespace x10 { namespace lang { 
class Runtime__RemoteControl;
} } 

#ifndef X10_LANG_RUNTIME__REMOTECONTROL_H_NODEPS
#define X10_LANG_RUNTIME__REMOTECONTROL_H_NODEPS
#include <x10/lang/SimpleLatch.h>
#include <x10/lang/Runtime__Mortal.h>
#include <x10/lang/Any.h>
#include <x10/lang/UnsupportedOperationException.h>
#include <x10/lang/String.h>
#include <x10/lang/Throwable.h>
#include <x10/lang/Activity__ClockPhases.h>
#ifndef X10_LANG_RUNTIME__REMOTECONTROL_H_GENERICS
#define X10_LANG_RUNTIME__REMOTECONTROL_H_GENERICS
template<class __T> x10aux::ref<__T> x10::lang::Runtime__RemoteControl::_deserializer(x10aux::deserialization_buffer& buf) {
    x10aux::ref<x10::lang::Runtime__RemoteControl> this_ = new (memset(x10aux::alloc<x10::lang::Runtime__RemoteControl>(), 0, sizeof(x10::lang::Runtime__RemoteControl))) x10::lang::Runtime__RemoteControl();
    buf.record_reference(this_);
    this_->_deserialize_body(buf);
    return this_;
}

#endif // X10_LANG_RUNTIME__REMOTECONTROL_H_GENERICS
#endif // __X10_LANG_RUNTIME__REMOTECONTROL_H_NODEPS
